name: Build app

on:
  workflow_call:
    inputs:
      android:
        required: false
        type: boolean
        description: 'If the android platform should be built'
      ios:
        required: false
        type: boolean
        description: 'If the iOS platform should be built'
      test:
        required: false
        type: boolean
        description: 'If a test build should be distributed'
      release:
        required: false
        type: boolean
        description: 'If a production release should be published'
      runs-on:
        required: true
        type: string
        description: 'On which machine to run the build'
      npm-scope:
        required: true
        type: 'string'
        description: 'Which npm scope to use for the private npm registry'
    secrets:
      BUILD_BOT_SSH_KEY:
        required: true
      APP_CENTER_API_TOKEN:
        required: false
      MS_TEAMS_WEBHOOK_URL:
        required: true
      APP_STORE_CONNECT_API_KEY_KEY:
        required: false
      MATCH_PASSWORD:
        required: false
      HUAWEI_APP_GALLERY_API_KEY:
        required: false
      ANDROID_KEYSTORE_PASSWORD:
        required: false
      SENTRY_AUTH_TOKEN:
        required: false
      PLAY_CONSOLE_ACCESS_JSON:
        required: false
      
jobs:
  test:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Test
        run: |
          echo "Test"

  # map_inputs:
  #   runs-on: ${{ inputs.runs-on }}
  #   needs: test
  #   steps:
  #     - name: Map inputs
  #       id: map-inputs
  #       uses: ventocom/app-workflows/.github/actions/map-inputs@main
  #       with:
  #         android: ${{ inputs.android }}
  #         ios: ${{ inputs.ios }}
  #         test: ${{ inputs.test }}
  #         release: ${{ inputs.release }}
  #   # Map step output to job output
  #   outputs:
  #     platforms: ${{ steps.map-inputs.outputs.platforms }}
  #     types: ${{ steps.map-inputs.outputs.types }}

  # prepare_and_build_environment:
  #   name: Build ${{ matrix.platform }} ${{ matrix.type.type }} app
  #   needs: map_inputs
  #   strategy:
  #     matrix:
  #       platform: ${{ needs.map_inputs.outputs.platforms }}
  #       type: ${{ needs.map_inputs.outputs.types }}
  #   runs-on: ${{ inputs.runs-on }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: 'recursive'
  #         ssh-key: ${{ secrets.BUILD_BOT_SSH_KEY }}
  #         ssh-strict: 'accept-new'

  #     - name: Cache ruby gems
  #       uses: actions/cache@v2
  #       with:
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-v1

  #     - name: Install ruby gems
  #       run: |
  #         arch -arm64 bundle config path vendor/bundle
  #         arch -arm64 bundle install --jobs 4 --retry 3 --quiet

  #     - name: Configure private npm registry
  #       uses: actions/setup-node@v2
  #       with:
  #         always-auth: true
  #         node-version: '14.x'
  #         registry-url: https://npm.pkg.github.com
  #         scope: ${{ inputs.npm-scope }}

  #     - name: Install node modules
  #       env:
  #         CORDOVA_CLI_VERSION: '10.0.0'
  #         IONIC_CLI_VERSION: '6.16.3'
  #       run: |
  #         arch -arm64 npm ci -q
  #         arch -arm64 npm i -g -q cordova@${CORDOVA_CLI_VERSION} @ionic/cli@${IONIC_CLI_VERSION}

  #     - name: Setup play store authentication
  #       env:
  #         PLAY_CONSOLE_ACCESS_JSON: ${{ secrets.PLAY_CONSOLE_ACCESS_JSON }}
  #       if: ${{ matrix.platform == 'android' && matrix.type.type == 'release' }}
  #       run: |
  #         arch -arm64 echo "$PLAY_CONSOLE_ACCESS_JSON" > play-console-access.json.b64
  #         arch -arm64 base64 -d -i play-console-access.json.b64 > play-console-access.json

  #     - name: Run fastlane
  #       env:
  #         APP_CENTER_API_TOKEN: ${{ secrets.APP_CENTER_API_TOKEN }}
  #         MS_TEAMS_WEBHOOK_URL: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
  #         APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         HUAWEI_APP_GALLERY_API_KEY: ${{ secrets.HUAWEI_APP_GALLERY_API_KEY }}
  #         ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  #         SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  #       run: arch -arm64 bundle exec fastlane ${{ matrix.platform }} ${{ matrix.type.lane }}
